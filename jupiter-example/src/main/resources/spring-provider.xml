<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2015 The Jupiter Project
  ~
  ~ Licensed under the Apache License, version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at:
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- netty的网络层实现(建议单例) -->
    <!--<bean id="nettyTcpAcceptor" class="org.jupiter.transport.netty.JNettyTcpAcceptor">-->
        <!--<constructor-arg index="0" value="18090" />-->
    <!--</bean>-->

    <!-- jupiter server(建议单例) -->
    <!--<bean id="jupiterServer" class="org.jupiter.rpc.DefaultServer">-->
        <!--<property name="acceptor" ref="nettyTcpAcceptor" />-->
    <!--</bean>-->

    <bean id="server" class="org.jupiter.spring.support.JupiterSpringServer">
        <!--<property name="server" ref="jupiterServer" />-->
        <!-- 注册中心地址, 逗号分隔 -->
        <property name="registryServerAddresses" value="127.0.0.1:20001" />

        <!-- 可选配置 -->
        <!--
            String registryServerAddresses                      // 注册中心地址 [host1:port1,host2:port2....]
            boolean hasRegistryServer                           // true: 需要连接注册中心; false: IP直连方式
            ProviderInterceptor[] providerInterceptors          // 全局拦截器
            FlowController<JRequest> flowController             // 全局流量控制
        -->
    </bean>

    <!-- provider -->
    <bean id="serviceTest" class="org.jupiter.example.ServiceTestImpl" />
    <bean id="serviceTestProvider" class="org.jupiter.spring.support.JupiterSpringProviderBean">
        <property name="server" ref="server" />
        <property name="providerImpl" ref="serviceTest" />

        <!-- 可选配置 -->
        <!--
            ProviderInterceptor[] providerInterceptors          // 私有拦截器
            int weight                                          // 权重
            int connCount                                       // 建议客户端维持的长连接数量
            Executor executor                                   // 该服务私有的线程池
            FlowController<JRequest> flowController             // 该服务私有的流量控制器
            JServer.ProviderInitializer<?> providerInitializer  // 服务延迟初始化
            Executor providerInitializerExecutor                // 服务私有的延迟初始化线程池, 如果未指定则使用全局线程池
        -->
    </bean>
</beans>